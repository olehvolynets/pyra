package view

import "pyra/view/layout"
import "pyra/view/components"
import "pyra/pkg/foodproducts"

templ NewProduct(form foodproducts.CreateResponse) {
	@layout.Pyra() {
		@components.Header() {
			<div class="flex justify-between w-full">
				<h1>Add a Product</h1>
				<a href="/foodProducts" class="link-primary">
					List
				</a>
			</div>
		}
		<section>
			@newProductForm(form)
		</section>
	}
}

templ newProductForm(form foodproducts.CreateResponse) {
	<form action="/foodProducts" method="POST">
		if err, ok := form.Errors["base"]; ok {
			<p class="text-red-300">{err}</p>
		}

		<div class="flex flex-col items-start gap-4">
			@formRow("name", "Name", form.Errors) {
				<input
					type="text"
					value={ form.Name }
					name="name"
					id="name"
					required
				/>
			}

			<div class="flex gap-2">
				@formRow("calories", "Calories", form.Errors) {
					<input
						type="number"
						value={ formatFloat(float64(form.Calories)) }
						name="calories"
						id="calories"
						placeholder="0"
						required
					/>
				}
				@formRow("per", "Per", form.Errors) {
					<input
						type="number"
						value={ formatFloat(float64(form.Per)) }
						name="per"
						id="per"
						placeholder="100"
						required
					/>
				}
			</div>
			<div class="macros flex gap-2">
				@formRow("proteins", "Proteins", form.Errors) {
					<input
						type="number"
						value={ formatFloat(float64(form.Proteins)) }
						name="proteins"
						id="proteins"
						placeholder="0"
						required
					/>
				}
				@formRow("fats", "Fats", form.Errors) {
					<input
						type="number"
						value={ formatFloat(float64(form.Fats)) }
						name="fats"
						id="fats"
						placeholder="0"
						required
					/>
				}
				@formRow("carbs", "Carbs", form.Errors) {
					<input
						type="number"
						value={ formatFloat(float64(form.Carbs)) }
						name="carbs"
						id="carbs"
						placeholder="0"
						required
					/>
				}
			</div>
			<button type="submit" class="btn-secondary">
				Submit
			</button>
		</div>
	</form>
}

templ formRow(name, label string, errors map[string]string) {
	<div class="form-control">
		<label for={ name }>{ label }</label>
		<div>{ children... }</div>

		if err, ok := errors[name]; ok {
			<span class="error">{ err }</span>
		}
	</div>
}
